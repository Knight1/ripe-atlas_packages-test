language: shell
services:
- docker
os: linux
dist: bionic
before_install:
- file /bin/bash
- curl -L https://goss.rocks/install | sudo sh
- sudo apt install git tar fakeroot libssl-dev autoconf automake libtool build-essential
  fakeroot dnsutils -y
addons:
  apt:
    update: true

stages:
- build
- name: deploy
  if: branch = master

deploy:
  provider: releases
  edge: true
  file: "*.deb"
  cleanup: false
  on:
    tags: true

jobs:
  include:
  - stage: build
    name: Build ARM64
    arch: arm64
    script:
    - git clone --recursive https://github.com/RIPE-NCC/ripe-atlas-software-probe.git
    - sudo ./ripe-atlas-software-probe/build-config/debian/bin/make-deb
    - mv *.deb atlasswprobe-5000-"$TRAVIS_CPU_ARCH".deb
    - sudo dpkg -i *.deb
    - sleep 10
    - sudo systemctl status atlas -l
    - docker build -t atlassw ./files/Dockerfile.arm64
    - docker run -d --name atlassw --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro atlassw
    - docker ps && sleep 10
  - stage: build
    name: Build AMD64
    arch: amd64
    script:
    - git clone --recursive https://github.com/RIPE-NCC/ripe-atlas-software-probe.git
    - sudo ./ripe-atlas-software-probe/build-config/debian/bin/make-deb
    - mv *.deb atlasswprobe-5000-"$TRAVIS_CPU_ARCH".deb
    - sudo dpkg -i *.deb
    - sleep 10
    - sudo systemctl status atlas -l
    - docker build -t atlassw ./files/Dockerfile.amd64
    - docker run -d --name atlassw --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro atlassw
    - docker ps && sleep 10
  - stage: deploy
    name: Deploy multi-arch manifest to registry
    arch: amd64
    script:
    - echo "$DOCKER_PASSWORD" | docker login docker.pkg.github.com --username Knight1
      --password-stdin
    - wget https://github.com/estesp/manifest-tool/releases/download/v1.0.0/manifest-tool-linux-amd64
    - chmod +x manifest-tool-linux-amd64
    - "./manifest-tool-linux-amd64"
    - if [[ "$TRAVIS_BRANCH" == "test" ]]; then ./manifest-tool-linux-amd64 push from-args
      --platforms linux/amd64,linux/arm,linux/arm64 --template knight/cloudflared-dns:amd64
      --target knight/cloudflared-dns:latest; fi
